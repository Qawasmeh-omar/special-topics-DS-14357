@prefix country: <http://data.nobelprize.org/resource/country/> .
@prefix city:  <http://data.nobelprize.org/resource/city/> .
@prefix university: <http://data.nobelprize.org/resource/university/> .
@prefix laureate: <http://data.nobelprize.org/resource/laureate/> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix nobel: <http://data.nobelprize.org/terms/> .
@prefix dbo:   <http://dbpedia.org/ontology/> .
@prefix dbp:   <http://dbpedia.org/property/> .
@prefix foaf:  <http://xmlns.com/foaf/0.1/> .
@prefix schema:<http://schema.org/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix nobel: <http://data.nobelprize.org/terms/> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .

# Define the shape
nobel:LaureateShape
  a sh:NodeShape ;
  sh:targetClass nobel:Laureate ;
  
  # Class constraint: Ensure instances belong to the specified class
  sh:class nobel:Laureate ;
  
  # Datatype constraint: Ensure the datatype of a property value
  sh:property [
    sh:path foaf:firstName ;
    sh:datatype xsd:string ;
  ] ;
 # Node Kind constraint: Specify the kind of nodes allowed
  sh:property [
    sh:path foaf:lastName ;
    #possible values: 
    #BlankNode, IRI, Literal, 
     #BlankNodeOrIRI, BlankdNodeOrLiteral, IRIOrLiteral
    sh:nodeKind sh:BlankNodeOrLiteral ;
   ] .
